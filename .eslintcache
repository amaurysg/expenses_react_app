[{"D:\\Documentos\\app_react_end\\expenses_react_app\\src\\index.js":"1","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\App.js":"2","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\elements\\Contenedor.js":"3","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\components\\GastosCat.js":"4","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\components\\EditarGastos.js":"5","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\components\\RegistroUser.js":"6","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\components\\InicioSesion.js":"7","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\components\\ListaGastos.js":"8","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\elements\\Fondo.js":"9","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\elements\\Header.js":"10","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\elements\\Boton.js":"11","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\elements\\BtnBack.js":"12","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\elements\\ElementosForm.js":"13","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\firebase\\firebaseConfig.js":"14","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\elements\\Alerta.js":"15","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\contextos\\AuthContext.js":"16","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\elements\\BtnClosedSesion.js":"17","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\components\\PrivateRoutes.js":"18","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\components\\FormGastos.js":"19","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\elements\\IconCat.js":"20","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\components\\SelectCat.js":"21","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\components\\DayPicker.js":"22","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\firebase\\AddGasto.js":"23","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\components\\BarraTotal.js":"24","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\funciones\\ConvertToCoin.js":"25","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\hooks\\useObtenerGastos.js":"26","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\elements\\ElementosListas.js":"27","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\firebase\\BorrarGasto.js":"28","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\hooks\\useObtenerGasto.js":"29","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\firebase\\EditarGasto.js":"30","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\hooks\\useObtenerGastosMes.js":"31","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\contextos\\TotalGastoMesContext.js":"32"},{"size":2667,"mtime":1612212819423,"results":"33","hashOfConfig":"34"},{"size":967,"mtime":1611948153962,"results":"35","hashOfConfig":"34"},{"size":602,"mtime":1611763326299,"results":"36","hashOfConfig":"34"},{"size":648,"mtime":1612210399556,"results":"37","hashOfConfig":"34"},{"size":1104,"mtime":1612205856571,"results":"38","hashOfConfig":"34"},{"size":5673,"mtime":1611848834695,"results":"39","hashOfConfig":"34"},{"size":4462,"mtime":1611854470656,"results":"40","hashOfConfig":"34"},{"size":4290,"mtime":1612024017073,"results":"41","hashOfConfig":"34"},{"size":1054,"mtime":1611767056333,"results":"42","hashOfConfig":"34"},{"size":1151,"mtime":1611767885504,"results":"43","hashOfConfig":"34"},{"size":867,"mtime":1611770117318,"results":"44","hashOfConfig":"34"},{"size":1062,"mtime":1611771243373,"results":"45","hashOfConfig":"34"},{"size":1508,"mtime":1611776291334,"results":"46","hashOfConfig":"34"},{"size":765,"mtime":1611790238679,"results":"47","hashOfConfig":"34"},{"size":1503,"mtime":1611790632686,"results":"48","hashOfConfig":"34"},{"size":1343,"mtime":1611868938088,"results":"49","hashOfConfig":"34"},{"size":741,"mtime":1611866511017,"results":"50","hashOfConfig":"34"},{"size":414,"mtime":1611873207886,"results":"51","hashOfConfig":"34"},{"size":5106,"mtime":1612210326105,"results":"52","hashOfConfig":"34"},{"size":1156,"mtime":1611881062138,"results":"53","hashOfConfig":"34"},{"size":2898,"mtime":1611937808473,"results":"54","hashOfConfig":"34"},{"size":2227,"mtime":1611939969756,"results":"55","hashOfConfig":"34"},{"size":411,"mtime":1612023805755,"results":"56","hashOfConfig":"34"},{"size":907,"mtime":1612213980352,"results":"57","hashOfConfig":"34"},{"size":230,"mtime":1611948852940,"results":"58","hashOfConfig":"34"},{"size":2149,"mtime":1612201634764,"results":"59","hashOfConfig":"34"},{"size":4357,"mtime":1611961773475,"results":"60","hashOfConfig":"34"},{"size":143,"mtime":1612023900141,"results":"61","hashOfConfig":"34"},{"size":1016,"mtime":1612204385603,"results":"62","hashOfConfig":"34"},{"size":614,"mtime":1612207786058,"results":"63","hashOfConfig":"34"},{"size":1320,"mtime":1612213656116,"results":"64","hashOfConfig":"34"},{"size":935,"mtime":1612213958414,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1n5l9hi",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Documentos\\app_react_end\\expenses_react_app\\src\\index.js",["139","140"],"D:\\Documentos\\app_react_end\\expenses_react_app\\src\\App.js",[],["141","142"],"D:\\Documentos\\app_react_end\\expenses_react_app\\src\\elements\\Contenedor.js",[],"D:\\Documentos\\app_react_end\\expenses_react_app\\src\\components\\GastosCat.js",[],"D:\\Documentos\\app_react_end\\expenses_react_app\\src\\components\\EditarGastos.js",[],"D:\\Documentos\\app_react_end\\expenses_react_app\\src\\components\\RegistroUser.js",["143","144","145","146"],"import React, {useState} from 'react'\r\nimport {Helmet} from 'react-helmet'\r\nimport {Header, Titulo, ContenedorHeader, ContenedorBotones} from '../elements/Header'\r\nimport {ContenedorFiltros, Formulario, Input, InputGrande, ContenedorBoton} from '../elements/ElementosForm'\r\nimport Boton from '../elements/Boton'\r\nimport {ReactComponent as SvgLogin} from '../img/registro.svg'\r\nimport styled from 'styled-components'\r\nimport swal from 'sweetalert'\r\nimport {auth} from '../firebase/firebaseConfig'\r\nimport {useHistory} from 'react-router-dom'\r\nimport Alerta from '../elements/Alerta'\r\n\r\nconst Svg = styled(SvgLogin)`\r\n      width: 100%; \r\n      max-height: 6.25rem; /*100px */\r\n      margin-bottom: 1.25rem;  /* 20px */\r\n\r\n\r\n`\r\n\r\nconst RegistroUser = () => {\r\n\r\n  //Agregamos const history \r\n  const history = useHistory()\r\n\r\n  //Variables de estado\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [repeatPassword, setRepeatPassword] = useState('')\r\n\r\n  const handleChange = (e) =>{\r\n    console.log(e.target.name)\r\n    switch (e.target.name) {\r\n      case 'email':\r\n            setEmail(e.target.value)\r\n            break;\r\n    \r\n      case 'password':\r\n            setPassword(e.target.value)\r\n            break;\r\n    \r\n      case 'repeatPassword':\r\n            setRepeatPassword(e.target.value)\r\n            break;\r\n    \r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (e) =>{\r\n      e.preventDefault()\r\n      console.log(email, password, repeatPassword) \r\n\r\n     //Comprobamos al lado del server si el correo es válido\r\n     //Definimos expresión regular \r\n     const expresionRegular = /[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+/\r\n     /* console.log(expresionRegular.test(email)) */\r\n     if ( !expresionRegular.test(email)){\r\n          console.log(\"Ingresa un email válido\")\r\n          swal(\"Email inválido!\", \"Ingresa un email válido\", \"warning\");\r\n          return\r\n        }\r\n        //Validamos que todos los datos estén llenos\r\n      if( email=== '' && password === '' && repeatPassword === ''){\r\n       \r\n        swal(\"Llena todos los datos\", \"You clicked the button!\", \"info\");\r\n        return\r\n      }\r\n      \r\n      //Validamos que ambos password sean iguales \r\n      if(  password !== repeatPassword ){\r\n          swal(\"Contraseñas diferentes\", \"Ingresa contraseñas iguales\", \"info\");\r\n        console.log(\"Las contraseñas no son iguales\")\r\n        return\r\n      }\r\n      //Si todo esta Ok Registramos\r\n      \r\n      //Funcion conectar a firebase y registrar users\r\n      //Usamos async await...git\r\n\r\n      try{\r\n        //\r\n         await auth.createUserWithEmailAndPassword(email,password)\r\n         swal(\"Usuario Registrado\", \"Presiona Ok para continuar\", \"success\")\r\n         history.push('/')\r\n\r\n      }catch (error){\r\n        //Errores personalizados, entramos a error.code y hacemos switch\r\n        //Dependiendo el case, daremos un error más exacto a lo que pasaría\r\n          let mensaje\r\n          switch(error.code){\r\n          \r\n                case 'auth/weak-password':\r\n                    mensaje = 'La contraseña tiene que ser de al menos 6 carácteres.'\r\n                    swal(\"Carácteres mínimos\", `${mensaje}`, \"warning\")\r\n                    break;\r\n                case 'auth/email-already-in-use':\r\n                    mensaje = 'Ya existe una cuenta con el correo proporcionado.'\r\n                    swal(\"Correo existente\", `${mensaje}`, \"info\")\r\n                break;\r\n                case 'auth/invalid-email':\r\n                    mensaje = 'El correo electrónico no es válido.'\r\n                    swal(\"Don't can\", `${mensaje}`, \"info\")\r\n                break;\r\n                default:\r\n                    mensaje = 'Hubo un error al intentar crear la cuenta.'\r\n                break;\r\n            }\r\n            console.log(mensaje)\r\n        \r\n      }\r\n    \r\n\r\n      //Metodo then, catch\r\n\r\n        /* auth.createUserWithEmailAndPassword(email,password)\r\n          .then(()=>{\r\n           console.log(\"Usario Registrado con éxtio\")\r\n          swal(\"Usuario Registrado\", \"You clicked the button!\", \"success\")\r\n\r\n        })\r\n        .catch(()=>{\r\n          console.log(\"Algo falló\")\r\n        }) */\r\n     \r\n\r\n\r\n\r\n    }\r\n      \r\n  \r\n\r\n\r\n  return (\r\n     <>\r\n      <Helmet>\r\n        <title>Crear Cuenta</title>\r\n      </Helmet>\r\n\r\n      <Header>\r\n          <ContenedorHeader>\r\n              <Titulo>Crear cuenta</Titulo>\r\n              <div>\r\n                <Boton to=\"/iniciar-sesion\">Iniciar Sesión</Boton>\r\n              </div>\r\n          </ContenedorHeader>\r\n      </Header>\r\n\r\n      <Formulario onSubmit={handleSubmit}>\r\n        \r\n          <Svg></Svg>\r\n          \r\n          <Input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            placeholder=\"Correo\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n          <Input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Contraseña\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n          <Input\r\n            type=\"password\"\r\n            name=\"repeatPassword\"\r\n            placeholder=\"Repetir Contraseña\"\r\n            value={repeatPassword}\r\n            onChange={handleChange}\r\n          />\r\n          <ContenedorBoton>\r\n              <Boton as=\"button\" primario type=\"submit\" >Crear Cuenta</Boton>\r\n          </ContenedorBoton>\r\n\r\n          </Formulario>\r\n         {/*  <Alerta\r\n            tipo=\"exito\"\r\n            mensaje=\"Amaury\"\r\n            estadoAlerta={true}\r\n          \r\n          /> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RegistroUser\r\n","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\components\\InicioSesion.js",["147"],"import React, {useState} from 'react'\r\nimport {Helmet} from 'react-helmet'\r\nimport {Header, Titulo, ContenedorHeader} from '../elements/Header'\r\nimport { Formulario, Input,  ContenedorBoton} from '../elements/ElementosForm'\r\nimport Boton from '../elements/Boton'\r\nimport {ReactComponent as SvgLogin} from '../img/login.svg'\r\nimport styled from 'styled-components'\r\nimport {useHistory} from 'react-router-dom'\r\nimport swal from 'sweetalert'\r\nimport {auth, db} from '../firebase/firebaseConfig'\r\n\r\n\r\nconst Svg = styled(SvgLogin)`\r\n      width: 100%; \r\n      max-height: 12.5rem; /*100px */\r\n      margin-bottom: 1.25rem;  /* 20px */\r\n\r\n\r\n`\r\n\r\nconst InicioSesion = () => {\r\n\r\n  //Agregamos const history \r\n  const history = useHistory()\r\n\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n \r\n //Capturando los values de los inputs \r\n  const handleChange = (e) =>{\r\n    if (e.target.name === 'email'){\r\n      setEmail(e.target.value)\r\n      console.log(email)\r\n    }else if (e.target.name === 'password'){\r\n      setPassword(e.target.value)\r\n      console.log(password)\r\n    }\r\n  }\r\n\r\n  //Funcion onSubmit \r\n    const handleSubmit = async (e) =>{\r\n      e.preventDefault()\r\n      console.log(email, password) \r\n\r\n     //Comprobamos al lado del server si el correo es válido\r\n     //Definimos expresión regular \r\n     const expresionRegular = /[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+/\r\n     /* console.log(expresionRegular.test(email)) */\r\n     if ( !expresionRegular.test(email)){\r\n          console.log(\"Ingresa un email válido\")\r\n          swal(\"Email inválido!\", \"Ingresa un email válido\", \"warning\");\r\n          return\r\n        }\r\n        //Validamos que todos los datos estén llenos\r\n      if( email=== '' || password === ''){\r\n       \r\n        swal(\"Llena todos los datos\", \"You clicked the button!\", \"info\");\r\n        return\r\n      }\r\n      \r\n      //Validamos que ambos password sean iguales \r\n     \r\n      //Si todo esta Ok Registramos\r\n      \r\n      //Funcion conectar a firebase y registrar users\r\n      //Usamos async await...git\r\n\r\n      try{\r\n        // Para iniciar sesion con Firebase usamos el metodo de a continuación:\r\n         await auth.signInWithEmailAndPassword(email,password)\r\n         swal(\"Iniciaste Sesión\", \"Presiona Ok para continuar\", \"success\")\r\n         history.push('/')\r\n\r\n      }catch (error){\r\n        //Errores personalizados, entramos a error.code y hacemos switch\r\n        //Dependiendo el case, daremos un error más exacto a lo que pasaría\r\n          let mensaje\r\n          switch(error.code){\r\n          \r\n                case 'auth/wrong-password':\r\n                    mensaje = 'La contraseña no es correcta'\r\n                    swal(\"Contraseña Incorrecta\", `${mensaje}`, \"warning\")\r\n                    break\r\n                case 'auth/user-not-found':\r\n                    mensaje = 'No existe cuenta con email ingresado'\r\n                    swal(\"Email no encontrado\", `${mensaje}`, \"info\")\r\n                    break\r\n                default:\r\n                    mensaje = 'Hubo un error al intentar iniciar la cuenta.'\r\n                      swal(\"Error\", `${mensaje}`, \"error\")\r\n                break;\r\n            }\r\n            console.log(mensaje)\r\n            //con este console miro el tipo de error que me da firebase\r\n            console.log(error.code)\r\n        \r\n      }\r\n\r\n     \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n      <>\r\n      <Helmet>\r\n        <title>Iniciar Sesión</title>\r\n      </Helmet>\r\n\r\n      <Header>\r\n          <ContenedorHeader>\r\n              <Titulo>Inicia Sesión</Titulo>\r\n              <div>\r\n                <Boton to=\"/crear-cuenta\">Registrarse</Boton>\r\n              </div>\r\n          </ContenedorHeader>\r\n      </Header>\r\n\r\n      <Formulario onSubmit={handleSubmit}>\r\n        \r\n          <Svg></Svg>\r\n          \r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Correo\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n          <Input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Contraseña\"\r\n            value={password}\r\n            onChange={handleChange}\r\n\r\n          />\r\n          \r\n          <ContenedorBoton>\r\n              <Boton as=\"button\" primario type=\"submit\" >Iniciar Sesión</Boton>\r\n          </ContenedorBoton>\r\n\r\n      </Formulario>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default InicioSesion\r\n","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\components\\ListaGastos.js",["148","149"],"import React /* {useContext}  */from 'react'\r\n// 1--Importamos {AuthContext} \r\nimport {Helmet} from 'react-helmet'\r\nimport {Header, Titulo} from '../elements/Header'\r\nimport BtnBack from '../elements/BtnBack'\r\n// 2--Importamos AuthContext\r\n/* import {AuthContext} from '../contextos/AuthContext' */\r\nimport {useAuth} from '../contextos/AuthContext'\r\nimport BarraTotal from './BarraTotal'\r\n\r\n//importamos hooks para obtener gastos\r\nimport useObtenerGastos from '../hooks/useObtenerGastos'\r\nimport {\r\n    Lista,\r\n    ElementoLista,\r\n    ListaDeCategorias,\r\n    ElementoListaCategorias,\r\n    Categoria,\r\n    Descripcion,\r\n    Valor,\r\n    Fecha,\r\n    ContenedorBotones,\r\n    BotonAccion,\r\n    BotonCargarMas,\r\n    ContenedorBotonCentral,\r\n    ContenedorSubtitulo,\r\n    Subtitulo\r\n} from '../elements/ElementosListas'\r\n\r\nimport IconoCategoria from '../elements/IconCat'\r\nimport ConvertToCoin from '../funciones/ConvertToCoin'\r\nimport {ReactComponent as IconoEditar} from '../img/editar.svg'\r\nimport {ReactComponent as IconoBorrar} from '../img/borrar.svg'\r\nimport {Link} from 'react-router-dom'\r\nimport Boton from '../elements/Boton'\r\nimport {format, fromUnixTime} from 'date-fns'\r\nimport {es} from 'date-fns/locale'\r\nimport borrarGasto from '../firebase/BorrarGasto'\r\n\r\n\r\nconst ListaGastos = () => {\r\n  \r\n  /*   // 3--Creamos const donde capturamos el contexto\r\n  const contexto = useContext(AuthContext)\r\n  // 4 --Console de contexto, nos debe devolver un objeto {Object} en consola\r\n  console.log(contexto) */\r\n\r\n//De una segunga manera, accedemos al contexto a traves de Hook personalizado\r\n//que se llama useAuth\r\n\r\nconst {usuario} = useAuth()\r\nconsole.log(usuario)\r\n\r\n\r\n//Aca traemos los datos de funcion useObtenerGastos\r\n//Corchetes para acceder por dentro \r\nconst [gastos, obtenerMasGastos, masPorCargar] = useObtenerGastos()\r\n\r\nconst formatearFecha = (fecha) =>{\r\n  return format(fromUnixTime(fecha), \"dd 'de' MMMM 'de' yyyy\", {locale: es}) \r\n   \r\n}\r\n\r\nconst FechaEsIgual = (gastos, index, gasto) =>{\r\n  if(index !== 0){\r\n      const fechaActual = formatearFecha(gasto.fecha) \r\n      const fechaGastoAnterior =formatearFecha(gastos[index - 1].fecha) \r\n      if(fechaActual === fechaGastoAnterior){\r\n        return true\r\n      }else{\r\n        return false\r\n      }\r\n\r\n  }\r\n}\r\n\r\n  return (\r\n     <>\r\n      <Helmet>\r\n        <title>Lista de gastos</title>\r\n      </Helmet>\r\n\r\n      <Header>\r\n         \r\n            <BtnBack></BtnBack>\r\n              <Titulo>Lista de gastos</Titulo>\r\n\r\n      </Header>\r\n\r\n      <Lista>\r\n        {gastos.map((gasto , index)=>{\r\n         /*  console.log(gasto.categoria) */\r\n          return (\r\n\r\n            < div key={gasto.id}>\r\n              {!FechaEsIgual(gastos, index, gasto) && \r\n              <Fecha> {formatearFecha(gasto.fecha)} </Fecha>\r\n              }\r\n              \r\n              <ElementoLista key={gasto.id} >\r\n                  <Categoria >\r\n                        <IconoCategoria  id={gasto.categoria}  />\r\n                       {gasto.categoria}\r\n                  </Categoria>\r\n\r\n                  <Descripcion>\r\n                    {gasto.descripcion}\r\n                  </Descripcion>\r\n                  <Valor>\r\n                    {ConvertToCoin(gasto.cantidad)}\r\n                  </Valor>\r\n                  <ContenedorBotones>\r\n                    <BotonAccion  as={Link} to={`/editar/${gasto.id}`}> \r\n                        <IconoEditar></IconoEditar>  \r\n                     </BotonAccion>\r\n                    <BotonAccion onClick={()=>borrarGasto(gasto.id)}>\r\n                        <IconoBorrar></IconoBorrar>\r\n                       </BotonAccion>\r\n                  </ContenedorBotones>\r\n              </ElementoLista>\r\n\r\n            </div>\r\n          )\r\n        })}\r\n\r\n        {\r\n          masPorCargar &&\r\n      <ContenedorBotonCentral>\r\n          <BotonCargarMas onClick={()=> obtenerMasGastos()}>Cargar más</BotonCargarMas>\r\n      </ContenedorBotonCentral>\r\n\r\n        }\r\n\r\n        {gastos.length === 0 &&\r\n            <ContenedorSubtitulo>\r\n                  <Subtitulo>No hay gastos por mostrar</Subtitulo>\r\n                  <Boton as={Link} to='/'>Agregar Gasto</Boton>\r\n            </ContenedorSubtitulo>\r\n        }\r\n\r\n      </Lista>\r\n\r\n      <BarraTotal/>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ListaGastos\r\n","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\elements\\Fondo.js",[],"D:\\Documentos\\app_react_end\\expenses_react_app\\src\\elements\\Header.js",["150"],"import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Header = styled.div`\r\n    width: 100%;\r\n    padding: 2.5rem; /* 40px */\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n \r\n    @media(max-width: 60rem){ /* 950px */\r\n        justify-content: start;\r\n    }\r\n`;\r\n \r\nconst Titulo = styled.h1`\r\n    font-weight: normal;\r\n    text-transform: uppercase;\r\n    font-size: 2.5rem; /* 40px */\r\n    \r\n \r\n    @media(max-width: 60rem){ /* 950px */\r\n        font-size: 2rem; /* 32px */\r\n    }\r\n`;\r\n \r\nconst ContenedorHeader = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n \r\n    @media(max-width: 60rem){ /* 950px */\r\n        display: flex;\r\n        flex-direction: column-reverse;\r\n        align-items: center;\r\n \r\n        & > div {\r\n            display: flex;\r\n            margin-bottom: 1.25rem; /* 20px */\r\n            justify-content: end;\r\n        }\r\n    }\r\n`;\r\n \r\nconst ContenedorBotones = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nexport {Header, Titulo, ContenedorHeader, ContenedorBotones}\r\n","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\elements\\Boton.js",[],"D:\\Documentos\\app_react_end\\expenses_react_app\\src\\elements\\BtnBack.js",[],"D:\\Documentos\\app_react_end\\expenses_react_app\\src\\elements\\ElementosForm.js",["151"],"import React from 'react'\r\nimport styled from 'styled-components'\r\n/* import theme from '../../theme' */\r\n\r\nconst ContenedorFiltros = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 1.87rem; /* 30px */\r\n \r\n    @media(max-width: 60rem){ /* 950px */\r\n        flex-direction: column;\r\n \r\n        & > * {\r\n            width: 100%;\r\n            margin-bottom: 0.62rem; /* 10px */\r\n        }\r\n    }\r\n`;\r\n \r\nconst Formulario = styled.form`\r\n    padding: 0 2.5rem; /* 40px */\r\n \r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    input {\r\n        width: 100%;\r\n        text-align: center;\r\n        padding: 2.5rem 0;\r\n        font-family: 'Work Sans', sans-serif;\r\n        &::placeholder {\r\n            color: rgba(0,0,0,.2);\r\n        }\r\n    }\r\n \r\n    @media(max-width: 60rem){ /* 950px */\r\n        justify-content: start;\r\n    }\r\n`;\r\n \r\nconst Input = styled.input`\r\n    font-size: 2.5rem; /* 40px */\r\n    text-transform: uppercase;\r\n    border: none;\r\n    border-bottom: 2px solid #E8EFF1;\r\n    outline: none;\r\n \r\n    @media(max-width: 60rem){ /* 950px */\r\n        font-size: 2.2rem; /* 24px */\r\n    }\r\n`;\r\n \r\nconst InputGrande = styled(Input)`\r\n    font-size: 4.37rem; /* 70px */\r\n    font-weight: bold;\r\n`;\r\n \r\nconst ContenedorBoton = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 2.5rem 0;  /* 40px */\r\n`;\r\n\r\nexport {ContenedorFiltros, Formulario, Input, InputGrande, ContenedorBoton}","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\firebase\\firebaseConfig.js",[],"D:\\Documentos\\app_react_end\\expenses_react_app\\src\\elements\\Alerta.js",["152"],"import React, {useEffect} from 'react'\r\nimport styled, {keyframes} from 'styled-components'\r\n\r\nconst slideDown = keyframes`\r\n    0% {\r\n        transform: translateY(-1.25rem); /* 20px */\r\n        opacity: 0;\r\n    }\r\n \r\n    10% {\r\n        transform: translateY(1.25rem);\r\n        opacity: 1;\r\n    }\r\n    \r\n    90% {\r\n        transform: translateY(1.25rem);\r\n        opacity: 1;\r\n    }\r\n \r\n    100% {\r\n        transform: translateY(1.25rem);\r\n        opacity: 0;\r\n    }\r\n`;\r\n \r\nconst ContenedorAlerta = styled.div`\r\n    z-index: 1000;\r\n    width: 100%;\r\n    left: 0;\r\n    top: 1.25rem; /* 20px */\r\n    position: fixed;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    animation: ${slideDown} 4s ease forwards;\r\n \r\n    p {\r\n \r\n        background: ${(props) => {\r\n            if(props.tipo === 'error'){\r\n                return '#E34747';\r\n            } else if (props.tipo === 'exito') {\r\n                return '#43A854';\r\n            } else {\r\n                return '#000';\r\n            }\r\n        }};\r\n        color: #fff;\r\n        padding: 1.25rem 2.5rem; /* 20px 40px */\r\n        border-radius: 0.31rem; /* 5px */\r\n        box-shadow: 0px 0px 15px rgba(0,0,0,.1);\r\n        text-align: center;\r\n    }\r\n`\r\n\r\nconst Alerta = ({tipo, mensaje, estadoAlerta, cambiarEstadoAlerta})=>{\r\n return  (\r\n <>\r\n     {\r\n      estadoAlerta &&\r\n      <ContenedorAlerta tipo={tipo} >\r\n          <p>{mensaje}</p>\r\n     </ContenedorAlerta>\r\n\r\n     }\r\n </>\r\n \r\n )\r\n}\r\n\r\nexport default Alerta","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\contextos\\AuthContext.js",[],"D:\\Documentos\\app_react_end\\expenses_react_app\\src\\elements\\BtnClosedSesion.js",[],"D:\\Documentos\\app_react_end\\expenses_react_app\\src\\components\\PrivateRoutes.js",[],"D:\\Documentos\\app_react_end\\expenses_react_app\\src\\components\\FormGastos.js",[],"D:\\Documentos\\app_react_end\\expenses_react_app\\src\\elements\\IconCat.js",[],"D:\\Documentos\\app_react_end\\expenses_react_app\\src\\components\\SelectCat.js",[],"D:\\Documentos\\app_react_end\\expenses_react_app\\src\\components\\DayPicker.js",["153"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport DayPicker from 'react-day-picker';\r\nimport 'react-day-picker/lib/style.css';\r\n\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport { DateUtils } from 'react-day-picker';\r\nimport 'react-day-picker/lib/style.css';\r\n\r\nimport dateFnsFormat from 'date-fns/format';\r\nimport dateFnsParse from 'date-fns/parse';\r\nimport { es } from 'date-fns/locale'\r\n\r\n\r\n\r\n\r\nfunction parseDate(str, format) {\r\n  const parsed = dateFnsParse(str, format, new Date(), { locale: es });\r\n  if (DateUtils.isDate(parsed)) {\r\n    return parsed;\r\n  }\r\n  return undefined;\r\n}\r\n\r\nfunction formatDate(date, format) {\r\n  return dateFnsFormat(date, format, { locale: es });\r\n}\r\n\r\nconst meses = ['Enero',\t'Febrero', 'Marzo',\t'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre',];\r\nconst dias_semana_cortos = ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sa'];\r\n\r\nconst ContenedorInput = styled.div`\r\n    input {\r\n        font-family: 'Work Sans', sans-serif;       \r\n        box-sizing: border-box;\r\n        background: #E8EFF1;\r\n        border: none;\r\n        cursor: pointer;\r\n        border-radius: 0.625rem; /* 10px */\r\n        height: 5rem; /* 80px */\r\n        width: 100%;\r\n        padding: 0 1.25rem; /* 20px */\r\n        font-size: 1.5rem; /* 24px */\r\n        text-align: center;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n \r\n    @media(max-width: 60rem){ /* 950px */\r\n        & > * {\r\n            width: 100%;\r\n        }\r\n    }\r\n`;\r\n\r\nconst DatePicker = ({fecha, setFecha}) => {\r\n  return (\r\n    <> \r\n    <ContenedorInput>\r\n\r\n      <DayPickerInput \r\n                  value={fecha}  \r\n                  onDayChange={(day)=> setFecha(day)}\r\n                  format=\"dd 'de' MMMM 'de' yyyy\"\r\n                  formatDate={formatDate}\r\n                  parseDate={parseDate}\r\n\r\n                  dayPickerProps={\r\n                    {\r\n                      months: meses , \r\n                      weekdaysShort: dias_semana_cortos\r\n\r\n                    }\r\n                  }\r\n                  />\r\n    </ContenedorInput>\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default DatePicker\r\n","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\firebase\\AddGasto.js",[],"D:\\Documentos\\app_react_end\\expenses_react_app\\src\\components\\BarraTotal.js",[],"D:\\Documentos\\app_react_end\\expenses_react_app\\src\\funciones\\ConvertToCoin.js",[],"D:\\Documentos\\app_react_end\\expenses_react_app\\src\\hooks\\useObtenerGastos.js",["154"],"import React, {useState, useEffect} from 'react'\r\nimport {db} from '../firebase/firebaseConfig'\r\nimport {useAuth} from '../contextos/AuthContext'\r\n\r\n\r\n//Esta funcion se conectará a firebase y nos traerá los gastos almacenados\r\nconst useObtenerGastos = () => {\r\n  \r\n  const [gastos, setGastos] = useState([])\r\n  const {usuario} = useAuth()\r\n  const [ultimoGasto, setUltimoGasto] = useState(null)\r\n  const [masPorCargar, setMasPorCargar] = useState(false)\r\n  \r\n\r\n  //Logica para obtener mas gastos del array \r\n\r\n  const obtenerMasGastos = ()=>{\r\n\r\n    //Accedemos a la coleccion y armamos la logica query\r\n      db.collection('gastos')\r\n      .where('uidUsuario', '==', usuario.uid )\r\n      .orderBy('fecha', 'desc')\r\n      .limit(10)\r\n      .startAfter(ultimoGasto)\r\n      .onSnapshot((snapshot)=>{\r\n        if(snapshot.docs.length >0){\r\n         setUltimoGasto(snapshot.docs[snapshot.docs.length-1])\r\n         \r\n         setGastos(gastos.concat(snapshot.docs.map((g) =>{\r\n           return {...g.data(), id: g.id}\r\n         })))\r\n        }else {\r\n          setMasPorCargar(false)\r\n        }\r\n      })\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    //const Unsuscribe porque vamos a querer retornar y desmontar\r\n    // el componente\r\n    //Accedemos al la bd gastos, seguido aplicamos los querys\r\n   const unSuscribe =   db.collection('gastos')\r\n      .where('uidUsuario', '==', usuario.uid )\r\n      .orderBy('fecha', 'desc')\r\n      .limit(10)\r\n      .onSnapshot((snapshot)=>{\r\n        /* console.log(snapshot.docs) */\r\n        if(snapshot.docs.length > 0){\r\n          setUltimoGasto(snapshot.docs[snapshot.docs.length-1])\r\n          setMasPorCargar(true)\r\n        }else{\r\n          setMasPorCargar(false)\r\n        }\r\n        setGastos(snapshot.docs.map((g)=>{\r\n          /* console.log(g.data()) */\r\n            return {...g.data(), id: g.id}\r\n        }))\r\n      })\r\n      //Para desmontar el componente, creamos la funcion unSuscribe\r\n      return unSuscribe\r\n      //agregamos usuario, porque necesitamos que cambie cuando se cambie de usuario\r\n  }, [usuario])\r\n  \r\n  return [gastos, obtenerMasGastos, masPorCargar]\r\n\r\n}\r\n\r\nexport default useObtenerGastos\r\n","D:\\Documentos\\app_react_end\\expenses_react_app\\src\\elements\\ElementosListas.js",[],"D:\\Documentos\\app_react_end\\expenses_react_app\\src\\firebase\\BorrarGasto.js",[],"D:\\Documentos\\app_react_end\\expenses_react_app\\src\\hooks\\useObtenerGasto.js",[],"D:\\Documentos\\app_react_end\\expenses_react_app\\src\\firebase\\EditarGasto.js",[],"D:\\Documentos\\app_react_end\\expenses_react_app\\src\\hooks\\useObtenerGastosMes.js",["155","156","157"],"D:\\Documentos\\app_react_end\\expenses_react_app\\src\\contextos\\TotalGastoMesContext.js",[],{"ruleId":"158","severity":1,"message":"159","line":5,"column":8,"nodeType":"160","messageId":"161","endLine":5,"endColumn":15},{"ruleId":"158","severity":1,"message":"162","line":16,"column":9,"nodeType":"160","messageId":"161","endLine":16,"endColumn":20},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"158","severity":1,"message":"167","line":3,"column":43,"nodeType":"160","messageId":"161","endLine":3,"endColumn":60},{"ruleId":"158","severity":1,"message":"168","line":4,"column":9,"nodeType":"160","messageId":"161","endLine":4,"endColumn":26},{"ruleId":"158","severity":1,"message":"169","line":4,"column":47,"nodeType":"160","messageId":"161","endLine":4,"endColumn":58},{"ruleId":"158","severity":1,"message":"170","line":11,"column":8,"nodeType":"160","messageId":"161","endLine":11,"endColumn":14},{"ruleId":"158","severity":1,"message":"171","line":10,"column":15,"nodeType":"160","messageId":"161","endLine":10,"endColumn":17},{"ruleId":"158","severity":1,"message":"172","line":16,"column":5,"nodeType":"160","messageId":"161","endLine":16,"endColumn":22},{"ruleId":"158","severity":1,"message":"173","line":17,"column":5,"nodeType":"160","messageId":"161","endLine":17,"endColumn":28},{"ruleId":"158","severity":1,"message":"174","line":1,"column":8,"nodeType":"160","messageId":"161","endLine":1,"endColumn":13},{"ruleId":"158","severity":1,"message":"174","line":1,"column":8,"nodeType":"160","messageId":"161","endLine":1,"endColumn":13},{"ruleId":"158","severity":1,"message":"175","line":1,"column":16,"nodeType":"160","messageId":"161","endLine":1,"endColumn":25},{"ruleId":"158","severity":1,"message":"176","line":3,"column":8,"nodeType":"160","messageId":"161","endLine":3,"endColumn":17},{"ruleId":"158","severity":1,"message":"174","line":1,"column":8,"nodeType":"160","messageId":"161","endLine":1,"endColumn":13},{"ruleId":"158","severity":1,"message":"174","line":1,"column":8,"nodeType":"160","messageId":"161","endLine":1,"endColumn":13},{"ruleId":"177","severity":1,"message":"178","line":12,"column":48,"nodeType":"179","messageId":"180","endLine":12,"endColumn":56,"fix":"181"},{"ruleId":"177","severity":1,"message":"178","line":13,"column":45,"nodeType":"179","messageId":"180","endLine":13,"endColumn":53,"fix":"182"},"no-unused-vars","'WebFont' is defined but never used.","Identifier","unusedVar","'AuthContext' is defined but never used.","no-native-reassign",["183"],"no-negated-in-lhs",["184"],"'ContenedorBotones' is defined but never used.","'ContenedorFiltros' is defined but never used.","'InputGrande' is defined but never used.","'Alerta' is defined but never used.","'db' is defined but never used.","'ListaDeCategorias' is defined but never used.","'ElementoListaCategorias' is defined but never used.","'React' is defined but never used.","'useEffect' is defined but never used.","'DayPicker' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"185","text":"186"},{"range":"187","text":"186"},"no-global-assign","no-unsafe-negation",[485,485],"()",[541,541]]